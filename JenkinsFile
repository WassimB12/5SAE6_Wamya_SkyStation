pipeline {
    agent any

    stages {
     
 stage('Build Docker Image') {
            steps {
                script {
                    // Utiliser le binaire Docker dans l'agent Jenkins
                    def dockerImage = docker.build('skistation:latest', '-f Dockerfile .')
                }
            }
        }

        stage('Push Docker Image') {
            steps {
                script {
                    // Utiliser le binaire Docker dans l'agent Jenkins
                    docker.withRegistry('https://registry.example.com', 'dockerhub_id') {
                        // Nom de l'image Docker
                        def dockerImage = docker.image('mon-projet-spring:latest')

                        // Authentifier auprès du registre Docker (peut être Docker Hub ou un autre registre)
                        dockerImage.push()
                    }
                }
            }
        }
        stage('Maven clean install') {
            steps {
sh "mvn clean install -Dmaven.test.skip=true"            }
        }

stage('Run Unit Tests with Mockito') {
            steps {
                sh 'mvn test' // Exécutez les tests unitaires avec Mockito en utilisant Maven
                // Utilisez 'gradle test' pour les projets Gradle
            }
        }
  stage('Nexus') {
            steps {


  sh 'mvn clean package deploy:deploy-file -DgroupId=tn.esprit.spring -DartifactId=gestion-station-ski -Dversion=1.0 -DgeneratePom=true -Dpackaging=jar -DrepositoryId=deploymentRepo -Durl=http://192.168.33.10:8081/repository/maven-releases/ -Dfile=target/gestion-station-ski-1.0.jar'

            }
        }

        // Add more stages as needed
    }}
