pipeline {
    agent any

    stages {
        stage('Checkout') {
            steps {
                script {
                    // Checkout the code from the specified branch
                    checkout([$class: 'GitSCM', branches: [[name: 'becheikhWassim_5SAE6_Wamya']], userRemoteConfigs: [[url: 'https://github.com/WassimB12/5SAE6_Wamya_SkyStation']]])
                }
            }
        }

        stage('Maven clean install') {
            steps {
sh "mvn clean install -Dmaven.test.skip=true"            }
        }
 stage('SonarQube Analysis') {
            steps {
                withSonarQubeEnv(installationName:'SonarQ') {
                    sh 'mvn sonar:sonar' //  ./chmod +x mvnw  clean org.sonarsource.scanner.maven:sonar-maven-plugin:3.9.0.2155:sonar
                }
            }
        }
stage('Run Unit Tests with Mockito') {
            steps {
                sh 'mvn test' // Ex√©cutez les tests unitaires avec Mockito en utilisant Maven
                // Utilisez 'gradle test' pour les projets Gradle
            }
        }
  stage('Nexus') {
            steps {


  sh 'mvn clean package deploy:deploy-file -DgroupId=tn.esprit.spring -DartifactId=gestion-station-ski -Dversion=1.0 -DgeneratePom=true -Dpackaging=jar -DrepositoryId=maven-releases -Durl=http://192.168.33.10:8081/repository/maven-releases/ -Dfile=target/gestion-station-ski-1.0.jar'

            }
        }

        // Add more stages as needed
    }}

